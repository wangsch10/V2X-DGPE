name: dair_npj_ms_ba_cd_dcn_before_w
data_dir: "dataset/cooperative-vehicle-infrastructure"
root_dir: "dataset/cooperative-vehicle-infrastructure/train.json"
validate_dir: "dataset/cooperative-vehicle-infrastructure/val.json"
test_dir: "dataset/cooperative-vehicle-infrastructure/val.json"

yaml_parser: "load_point_pillar_params"
#yaml_parser: "load_lift_splat_shoot_params"

train_params:
  batch_size: &batch_size 4
  epoches: 30
  eval_freq: 2
  save_freq: 1
  max_cav: 2
  supervise_single: &supervise_single False #True

camera_params:
  use_depth_gt: &use_depth_gt False #True
  
#comm_range: 100


noise_setting:
  add_noise: True
  args: 
    pos_std: 0.2
    rot_std: 0.2
    pos_mean: 0
    rot_mean: 0

fusion:
  core_method: 'LiDARCameraIntermediateFusionDatasetDAIRV2' # LateFusionDataset, EarlyFusionDataset, IntermediateFusionDataset(V2X) supported. 
  args: 
    proj_first: &proj_first false
    # core_method: 'CameraIntermediateFusionDataset' configs
    grid_conf: &grid_conf
      #xbound: [-48, 48, 0.4]   # 限制x方向的范围并划分网格
      #ybound: [-48, 48, 0.4]   # 限制y方向的范围并划分网格
      xbound: [-40, 40, 0.4]   # 限制x方向的范围并划分网格
      ybound: [-100.8, 100.8, 0.4]   # 限制y方向的范围并划分网格
      zbound: [-10, 10, 20.0]   # 限制z方向的范围并划分网格
      ddiscr: [2, 50, 48]
      mode: 'LID'
    data_aug_conf: &data_aug_conf
      resize_lim: [0.7, 0.8]
      final_dim: [320, 480]
      rot_lim: [-3.6, 3.6]
      H: 600
      W: 800
      rand_flip: False
      bot_pct_lim: [0.0, 0.20]
      cams: ['camera0', 'camera1', 'camera2', 'camera3']
      Ncams: 4
    clip_pc: false

# preprocess-related
preprocess:
  # options: BasePreprocessor, VoxelPreprocessor, BevPreprocessor
  core_method: 'SpVoxelPreprocessor'
  args:
    voxel_size: &voxel_size [0.4, 0.4, 4]
    max_points_per_voxel: 32
    max_voxel_train: 32000
    max_voxel_test: 70000
  # lidar range for each individual cav.
  cav_lidar_range: &cav_lidar [-100.8, -40, -3, 100.8, 40, 1]

data_augment:
  - NAME: random_world_flip
    ALONG_AXIS_LIST: [ 'x' ]

  - NAME: random_world_rotation
    WORLD_ROT_ANGLE: [ -0.78539816, 0.78539816 ]

  - NAME: random_world_scaling
    WORLD_SCALE_RANGE: [ 0.95, 1.05 ]

# anchor box related
postprocess:
  core_method: 'VoxelPostprocessor' # VoxelPostprocessor, BevPostprocessor supported
  gt_range: *cav_lidar
  dir_args: &dir_args
    dir_offset: 0.7853
    num_bins: 2
  anchor_args:
    cav_lidar_range: *cav_lidar
    l: 4.5
    w: 2
    h: 1.56
    r: [0, 90]
    feature_stride: 2
    num: &achor_num 2
  target_args:
    pos_threshold: 0.6
    neg_threshold: 0.45
    score_threshold: 0.4
  order: 'hwl' # hwl or lwh
  max_num: 120 # maximum number of objects in a single frame. use this number to make sure different frames has the same dimension in the same batch
  nms_thresh: 0.15

# model related
model:
  core_method: lift_splat_shoot_intermediate
  args:
    dcn_before_upsample: true
    voxel_size: *voxel_size
    lidar_range: *cav_lidar
    anchor_number: *achor_num

    pillar_vfe:
      use_norm: true
      with_distance: false
      use_absolute_xyz: true
      num_filters: [64]
    point_pillar_scatter:
      num_features: 64

    base_bev_backbone:
      layer_nums: [3, 4, 5]
      layer_strides: [2, 2, 2]
      num_filters: [64, 128, 256]
      upsample_strides: [1, 2, 4]
      num_upsample_filter: [128, 128, 128]
      compression: 0
      proj_first: *proj_first
      voxel_size: *voxel_size

    anchor_num: *achor_num

    img_backbone:
      outC: 128
      anchor_number: *achor_num
      grid_conf: *grid_conf
      data_aug_conf: *data_aug_conf
      dir_args: *dir_args
      supervise_single: *supervise_single
      use_depth_gt: False
      depth_supervision: False #true

      img_downsample: 8
      img_features: 128

      fusion_args:
        core_method: max_ms
        args:
          voxel_size: *voxel_size
          downsample_rate: 1
          in_channels: 128



loss:
  core_method: point_pillar_loss
  args:
    cls_weight: 1.0
    reg: 2.0
    #dir_args: 
    #  dir_weight: 0.2
    #  args: *dir_args
    #  anchor_yaw: *anchor_yaw
    #depth_weight: 3


optimizer:
  core_method: Adam
  lr: 0.002
  args:
    eps: 1e-10
    weight_decay: 1e-4

lr_scheduler:
  core_method: multistep #step, multistep and Exponential support
  gamma: 0.1
  step_size: [15, 25]

